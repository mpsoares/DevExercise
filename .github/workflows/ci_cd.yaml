name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        #options: >-
        #  --health-cmd "mongosh --eval 'db.adminCommand('ping')'" 
        #  --health-interval 10s
        #  --health-timeout 5s
        #  --health-retries 5


    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          pip install -r app/requirements.txt
          pip install requests 

      - name: Run Tests
        run: python -m unittest discover app/tests

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/devexercise ./app

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/devexercise

      - name: Create Kubernetes Manifests
        run: |
          echo "
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: devexercise
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: devexercise
            template:
              metadata:
                labels:
                  app: devexercise
              spec:
                containers:
                - name: devexercise
                  image: ${{ secrets.DOCKERHUB_USERNAME }}/devexercise:latest
                  ports:
                  - containerPort: 8000
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: devexercise
          spec:
            selector:
              app: devexercise
            ports:
              - protocol: TCP
                port: 80
                targetPort: 8000
          " > deployment.yaml


